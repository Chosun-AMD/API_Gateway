server:
  port: 8000

token:
  secret: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9eyJmb28iOiJiYXIiLCJpYXQiOjE0OTg1ODY1ODAsImV4cCI6MTQ5OTE5MTM4MH0YMSZ1PmRsjxyrtkLADayLJ99OEz0BzgpFZmeVXSRE8

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka


spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: auth-service  # 로그인
          uri: lb://AMD-Backend-Auth
          predicates:
            - Path=/auth/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/auth/(?<segment>.*), /$\{segment}

        - id: auth-service  # 회원가입
          uri: lb://AMD-Backend-Auth
          predicates:
            - Path=/auth/signup
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/auth/(?<segment>.*), /$\{segment}

        - id: auth-service  # 로그아웃
          uri: lb://AMD-Backend-Auth
          predicates:
            - Path=/auth/logout
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/auth/(?<segment>.*), /$\{segment}

        - id: auth-service  # GET으로 시작하는 페이지는 인증 헤더 필요
          uri: lb://AMD-Backend-Auth
          predicates:
            - Path=/user/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter   # AuthorizationHeader 검증

        - id: parse-service
          uri: http://localhost:9001/
          predicates:
            - Path=/parse/**
